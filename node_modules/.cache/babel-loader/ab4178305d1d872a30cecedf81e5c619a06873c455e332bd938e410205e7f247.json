{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\George\\\\Documents\\\\GitHub\\\\fivem-leaderboard\\\\src\\\\components\\\\Leaderboard.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Leaderboard() {\n  _s();\n  const [gangs, setGangs] = useState([]);\n  const csvUrl = \"https://docs.google.com/spreadsheets/d/e/2PACX-1vT3xiYNiWQcKMZoFWNIegC2z1B04UjqRLNVE2Tlyxh43ew9a_UkDegQEPu2Qph_8q1cnd61QeMDnHK5/pub?gid=0&single=true&output=csv\";\n  useEffect(() => {\n    fetch(csvUrl).then(res => res.text()).then(csvText => {\n      const [headerLine, ...lines] = csvText.trim().split(\"\\n\");\n      const headers = headerLine.split(\",\").map(h => h.trim());\n      const data = lines.map(line => {\n        const values = line.split(\",\");\n        const item = {};\n        headers.forEach((h, idx) => {\n          const raw = values[idx];\n          item[h] = isNaN(+raw) ? raw : +raw;\n        });\n        return item;\n      });\n      const sorted = data.sort((a, b) => b.Points - a.Points);\n      setGangs(sorted);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-4xl mx-auto p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-3xl font-bold text-center mb-6 text-white\",\n      children: \"Gang Wars League Leaderboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-gray-900 rounded-xl overflow-hidden shadow-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between p-3 bg-gray-800 font-semibold text-white\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"w-1/4\",\n          children: \"Gang Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"w-1/4 text-center\",\n          children: \"Points\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"w-1/4 text-center\",\n          children: \"Kills\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"w-1/4 text-center\",\n          children: \"Deaths\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), gangs.map((gang, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `flex justify-between p-3 ${index % 2 === 0 ? \"bg-gray-800\" : \"bg-gray-700\"} text-white`,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"w-1/4\",\n          children: gang.Name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"w-1/4 text-center\",\n          children: gang.Points\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"w-1/4 text-center\",\n          children: gang.Kills\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"w-1/4 text-center\",\n          children: gang.Deaths\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(Leaderboard, \"YbEAjGNeEzSWATeM8B2k/vTgXJg=\");\n_c = Leaderboard;\nvar _c;\n$RefreshReg$(_c, \"Leaderboard\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Leaderboard","_s","gangs","setGangs","csvUrl","fetch","then","res","text","csvText","headerLine","lines","trim","split","headers","map","h","data","line","values","item","forEach","idx","raw","isNaN","sorted","sort","a","b","Points","className","children","fileName","_jsxFileName","lineNumber","columnNumber","gang","index","Name","Kills","Deaths","_c","$RefreshReg$"],"sources":["C:/Users/George/Documents/GitHub/fivem-leaderboard/src/components/Leaderboard.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\n\ninterface GangData {\n  Name: string;\n  Points: number;\n  Kills: number;\n  Deaths: number;\n}\n\nexport default function Leaderboard() {\n  const [gangs, setGangs] = useState<GangData[]>([]);\n  const csvUrl =\n    \"https://docs.google.com/spreadsheets/d/e/2PACX-1vT3xiYNiWQcKMZoFWNIegC2z1B04UjqRLNVE2Tlyxh43ew9a_UkDegQEPu2Qph_8q1cnd61QeMDnHK5/pub?gid=0&single=true&output=csv\";\n\n  useEffect(() => {\n    fetch(csvUrl)\n      .then((res) => res.text())\n      .then((csvText) => {\n        const [headerLine, ...lines] = csvText.trim().split(\"\\n\");\n        const headers = headerLine.split(\",\").map((h) => h.trim());\n        const data = lines.map((line) => {\n          const values = line.split(\",\");\n          const item: any = {};\n          headers.forEach((h, idx) => {\n            const raw = values[idx];\n            item[h] = isNaN(+raw) ? raw : +raw;\n          });\n          return item as GangData;\n        });\n\n        const sorted = data.sort((a, b) => b.Points - a.Points);\n        setGangs(sorted);\n      });\n  }, []);\n\n  return (\n    <div className=\"max-w-4xl mx-auto p-4\">\n      <h1 className=\"text-3xl font-bold text-center mb-6 text-white\">\n        Gang Wars League Leaderboard\n      </h1>\n      <div className=\"bg-gray-900 rounded-xl overflow-hidden shadow-lg\">\n        <div className=\"flex justify-between p-3 bg-gray-800 font-semibold text-white\">\n          <span className=\"w-1/4\">Gang Name</span>\n          <span className=\"w-1/4 text-center\">Points</span>\n          <span className=\"w-1/4 text-center\">Kills</span>\n          <span className=\"w-1/4 text-center\">Deaths</span>\n        </div>\n        {gangs.map((gang: GangData, index: number) => (\n          <div\n            key={index}\n            className={`flex justify-between p-3 ${index % 2 === 0 ? \"bg-gray-800\" : \"bg-gray-700\"} text-white`}\n          >\n            <span className=\"w-1/4\">{gang.Name}</span>\n            <span className=\"w-1/4 text-center\">{gang.Points}</span>\n            <span className=\"w-1/4 text-center\">{gang.Kills}</span>\n            <span className=\"w-1/4 text-center\">{gang.Deaths}</span>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}